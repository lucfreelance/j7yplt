<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Toma Nistor - San Diego Web Developer</title>
    <link>https://tomanistor.com/blog/</link>
    <description>Recent content in Blogs on Toma Nistor - San Diego Web Developer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 29 Oct 2020 02:18:41 +0000</lastBuildDate><atom:link href="https://tomanistor.com/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Simple JavaScript Back Button</title>
      <link>https://tomanistor.com/blog/simple-javascript-back-button/</link>
      <pubDate>Thu, 29 Oct 2020 02:18:41 +0000</pubDate>
      
      <guid>https://tomanistor.com/blog/simple-javascript-back-button/</guid>
      <description>The window.history object can be used to manipulate a browser&amp;rsquo;s session history. Session history is localized to each specific browser tab. This means that we can also traverse between pages stored in a tab&amp;rsquo;s window.history object.
To go back one page:
history.back(); Or:
history.go(-1); Both methods navigate to the previous page stored in the session history, but history.go() can be used to go backward or forward any number of pages specified as the parameter if they exist within the session history&amp;rsquo;s range.</description>
    </item>
    
    <item>
      <title>Using currentColor for More Concise CSS</title>
      <link>https://tomanistor.com/blog/using-currentcolor-for-more-concise-css/</link>
      <pubDate>Wed, 14 Oct 2020 06:34:14 +0000</pubDate>
      
      <guid>https://tomanistor.com/blog/using-currentcolor-for-more-concise-css/</guid>
      <description>The currentColor value in CSS allows us to style more concisely by leveraging color as a variable. In the following examples, you&amp;rsquo;ll see how we use currentColor to avoid repeating code when dealing with color values.
What is currentColor? Simply put, currentColor represents the value of an element&amp;rsquo;s color property. If color: #333333 then currentColor is #333333.
How is it used? To make code more concise, it is used like a scoped variable.</description>
    </item>
    
    <item>
      <title>Displaying a List of Git Conflicts</title>
      <link>https://tomanistor.com/blog/displaying-a-list-of-git-conflicts/</link>
      <pubDate>Tue, 05 Mar 2019 21:12:00 -0800</pubDate>
      
      <guid>https://tomanistor.com/blog/displaying-a-list-of-git-conflicts/</guid>
      <description>Working in a large code base with many other developers can lead to instances of merge conflicts. Merge conflicts happen when two branches modify the same lines of code and git can&amp;rsquo;t resolve which changes to keep.
Typically, git is pretty good with merging distinctly separate work together up to this point, when merge conflicts arise and require human intervention. When that happens, git will alert you in the terminal with a message that looks like this:</description>
    </item>
    
    <item>
      <title>Selecting and Modifying CSS Pseudo-Elements with JavaScript</title>
      <link>https://tomanistor.com/blog/selecting-and-modifying-css-pseudo-elements-with-javascript/</link>
      <pubDate>Sat, 12 Jan 2019 19:59:16 -0800</pubDate>
      
      <guid>https://tomanistor.com/blog/selecting-and-modifying-css-pseudo-elements-with-javascript/</guid>
      <description>Since they&amp;rsquo;re not part of the DOM, CSS pseudo-elements can&amp;rsquo;t be selected and edited with JavaScript the same way as traditional elements on a page. I ended up going a different route by selecting the regular elements, creating CSS rules for their pseudo elements, and injecting those them into the page.
The Design One of my recent projects involved creating 10 sections that follow a similar layout. Each section was distinguished by a numbered tab that was incrementally offset to the right of the previous section&amp;rsquo;s tab.</description>
    </item>
    
    <item>
      <title>How To Change Most Recent Commit Message</title>
      <link>https://tomanistor.com/blog/how-to-change-most-recent-commit-message/</link>
      <pubDate>Fri, 06 Jul 2018 13:44:09 -0700</pubDate>
      
      <guid>https://tomanistor.com/blog/how-to-change-most-recent-commit-message/</guid>
      <description>If you&amp;rsquo;re like me, on more than one occasion you&amp;rsquo;ve typed out your commit message and noticed a nasty typo after the fact.
Here&amp;rsquo;s a quick way to amend your last commit message if you have already entered your commit message in the terminal but have not yet pushed your local branch to the remote branch.
$ git commit --amend This will open up your editor to edit your commit message.</description>
    </item>
    
    <item>
      <title>How to Remove Untracked Files from Git</title>
      <link>https://tomanistor.com/blog/how-to-remove-untracked-files-from-git/</link>
      <pubDate>Tue, 08 May 2018 10:36:02 -0700</pubDate>
      
      <guid>https://tomanistor.com/blog/how-to-remove-untracked-files-from-git/</guid>
      <description>Untracked files are files in the git repository&amp;rsquo;s working tree that are not present in the git index. These are new files that were not present in the previous snapshot of the repository.
When you don&amp;rsquo;t want to stage and commit these files, git clean is a useful way to permanently remove all or a selection of your untracked files in git.
This is what untracked files look like when using git status</description>
    </item>
    
    <item>
      <title>Fixing the iOS Mobile Double-Click Link Issue</title>
      <link>https://tomanistor.com/blog/fixing-the-ios-mobile-double-click-link-issue/</link>
      <pubDate>Tue, 01 May 2018 21:06:32 -0700</pubDate>
      
      <guid>https://tomanistor.com/blog/fixing-the-ios-mobile-double-click-link-issue/</guid>
      <description>One of my recent site builds came back from a round of QA with a bug present only on mobile iOS devices. It was a set of tab links that required two clicks to function on iPhones and iPads.
The Bug The buggy tab links had an effect that added a pseudo element to the right of each link indicating when a link was hovered over, in focus, or active. These tab links worked as just as expected on Chrome, Firefox, and desktop Safari: one single click would activate and display a new tab panel.</description>
    </item>
    
    <item>
      <title>My Favorite Web Development Podcasts</title>
      <link>https://tomanistor.com/blog/my-favorite-web-development-podcasts/</link>
      <pubDate>Sat, 31 Mar 2018 17:54:32 +0000</pubDate>
      
      <guid>https://tomanistor.com/blog/my-favorite-web-development-podcasts/</guid>
      <description>Around the time I graduated from my programming bootcamp in March 2017, I started listening to programming podcasts to scratch the itch of continuous learning and to keep myself engaged with the world of web development.
Although I started with just a handful, almost a third of my Podcast Addict app is now filled with them. Some are more specific to a programming niche, tech stack, languages, or frameworks while others are broad and all-encompassing.</description>
    </item>
    
    <item>
      <title>My First Vue.js App</title>
      <link>https://tomanistor.com/blog/my-first-vuejs-app/</link>
      <pubDate>Sat, 16 Sep 2017 20:09:33 +0000</pubDate>
      
      <guid>https://tomanistor.com/blog/my-first-vuejs-app/</guid>
      <description>A little while ago, I spent some time researching which frontend JavaScript framework or library I would learn next. The primary criteria was ease of learning, ease of use, and popularity (community support and career usefulness). I chose to start with Vue.js.
My method of learning was by reading the Vue.js documentation and following Ayo Isaiah&amp;rsquo;s tutorial for developing a to-do list application. The former was very helpful in introducing me to concepts and the latter was even more helpful in explaining those concepts in practice.</description>
    </item>
    
    <item>
      <title>Const, Let, and Var</title>
      <link>https://tomanistor.com/blog/const-let-and-var/</link>
      <pubDate>Fri, 11 Aug 2017 23:21:07 -0700</pubDate>
      
      <guid>https://tomanistor.com/blog/const-let-and-var/</guid>
      <description>One of the very first things I noticed when I took up JavaScript ECMAScript 2015, or more commonly known as ES6, were the new types of variable declarations. Whereas I had previously only used var to declare a variable, I could now declare variables using let and const.
But how are let and const different from var? And in what situations are they each appropriate to use?
Scope Each of the the three variable declarations deal with different levels of scope: global, function, and block level scopes.</description>
    </item>
    
    <item>
      <title>Install and Update Go on Linux</title>
      <link>https://tomanistor.com/blog/install-and-update-go-on-linux/</link>
      <pubDate>Mon, 31 Jul 2017 21:48:33 -0700</pubDate>
      
      <guid>https://tomanistor.com/blog/install-and-update-go-on-linux/</guid>
      <description>This is the easiest way to install Google&amp;rsquo;s GoLang (Go programming language) on a Linux machine and then perform an update when a new Go version is released.
Install Go Installing Go is as simple as downloading a binary archive file and extracting the contents in the right location on your machine.
1. Download Go First, visit the Go downloads page and download the binary suitable for your machine.
2. Extract Archive File Go into your downloads folder and extract the newly downloaded archive file into the /usr/local directory.</description>
    </item>
    
    <item>
      <title>Starting with Vue.js</title>
      <link>https://tomanistor.com/blog/starting-with-vuejs/</link>
      <pubDate>Sun, 09 Jul 2017 23:23:29 -0700</pubDate>
      
      <guid>https://tomanistor.com/blog/starting-with-vuejs/</guid>
      <description>Lately, I&amp;rsquo;ve been a little indecisive on which JavaScript framework or library to dive into next. Based on all of the job descriptions I&amp;rsquo;ve been plowing through, any front-end and even most full-stack web development roles require proficiency with a number of different JavaScript frameworks.
Vanilla JavaScript is Not Enough A lot of advice directed at junior web developers that I&amp;rsquo;ve come across online stresses the importance of mastering JavaScript before attempting to level up with frameworks.</description>
    </item>
    
    <item>
      <title>Cache Bust that Asset</title>
      <link>https://tomanistor.com/blog/cache-bust-that-asset/</link>
      <pubDate>Tue, 20 Jun 2017 13:00:59 -0700</pubDate>
      
      <guid>https://tomanistor.com/blog/cache-bust-that-asset/</guid>
      <description>Static assets like CSS, JavaScript, and image files are normally cached for long periods of time with expiry periods of a few weeks or months after being served to a user&amp;rsquo;s web browser. Caching is used to speed up a website or application by once downloading a file and storing a cached version of it in the browser. When a user moves from page to page on a website or revisits the same site in the future, the cached file is served automatically without wasting any time loading the same file.</description>
    </item>
    
    <item>
      <title>Big List of Free JavaScript Books</title>
      <link>https://tomanistor.com/blog/big-list-of-free-javascript-books/</link>
      <pubDate>Sun, 07 May 2017 14:46:09 -0700</pubDate>
      
      <guid>https://tomanistor.com/blog/big-list-of-free-javascript-books/</guid>
      <description>This is a big list of free JavaScript books and resources that can all be found online. The list is categorized by different JavaScript frameworks and ordered alphabetically. Some of the reading materials require registration or your email but are otherwise still free for consumption.
If you have a resource to add to this list, please let me know!
* Registration required
JavaScript  Basic JavaScript for the Impatient Programmer by Dr.</description>
    </item>
    
    <item>
      <title>Shell Script to Clear CloudFlare Cache</title>
      <link>https://tomanistor.com/blog/shell-script-to-clear-cloudflare-cache/</link>
      <pubDate>Fri, 05 May 2017 16:03:45 -0700</pubDate>
      
      <guid>https://tomanistor.com/blog/shell-script-to-clear-cloudflare-cache/</guid>
      <description>CloudFlare is a free content delivery network (CDN) that helps deliver static content quickly and efficiently throughout the world. Caching and serving static content through dependable CDNs like CloudFlare, MaxCDN, or AWS CloudFront can help speed up your website drastically.
 A CDN is essentially a network of geographically dispersed servers. Each CDN node (also called Edge Servers) caches the static content of a site like the images, CSS/JS files and other structural components.</description>
    </item>
    
    <item>
      <title>Hugo Workflow</title>
      <link>https://tomanistor.com/blog/hugo-workflow/</link>
      <pubDate>Fri, 28 Apr 2017 11:32:36 -0700</pubDate>
      
      <guid>https://tomanistor.com/blog/hugo-workflow/</guid>
      <description>The Hugo workflow is fairly simple and straightforward. This is the workflow I use to update and operate this blog and portfolio.
Inside of your Hugo project folder, the public/ folder is generated with all of your static site files once hugo is run in the terminal.
Purge and Serve To generate a new public/ folder, just remove the existing one and run the server. All updates you have made to your content and theme are now available in the new public/ folder and visible on the live server.</description>
    </item>
    
    <item>
      <title>Hugo Site is Launched</title>
      <link>https://tomanistor.com/blog/hugo-site-is-launched/</link>
      <pubDate>Thu, 30 Mar 2017 02:28:01 -0700</pubDate>
      
      <guid>https://tomanistor.com/blog/hugo-site-is-launched/</guid>
      <description>My new portfolio has officially been launched! This is my first static website built using Hugo. In my previous post, I mapped out a few broad objectives for this project.
Let&amp;rsquo;s take a look at the completed goals from a short while ago and review.
Objectives  Create portfolio to display work Create blog to jot down my progress and help others along the way Implement design with SCSS Design new Hugo theme and distribute for others to used  Create Portfolio The portfolio has been created and published in place of my old portfolio site.</description>
    </item>
    
    <item>
      <title>Starting with Hugo</title>
      <link>https://tomanistor.com/blog/starting-with-hugo/</link>
      <pubDate>Mon, 13 Mar 2017 23:03:31 -0700</pubDate>
      
      <guid>https://tomanistor.com/blog/starting-with-hugo/</guid>
      <description>I&amp;rsquo;m finally ditching Wordpress and testing out new waters with Hugo, the static site generator written in Go. Go is a speedy programming language developed by Google.
During this new chapter of my career as a web developer, I&amp;rsquo;ll be moving away from dynamically generated site builders and constructing my new portfolio from the ground up in order to practice and refine my web developing skills with JavaScript, Go, and SCSS.</description>
    </item>
    
  </channel>
</rss>
